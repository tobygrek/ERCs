Imports System.Data.SqlClient
Imports System.Web.Mvc
Imports erc2.ViewModel
Imports System.Dynamic



Namespace Controllers
    Public Class ERCController
        Inherits Controller
        Dim con As SqlConnection = New SqlConnection("Data Source=DSE-MAIN1A;Initial Catalog=VestaTest;Persist Security Info=True;User ID=Tobil;Password=123asd!;MultipleActiveResultSets=True;Application Name=EntityFramework")
        Dim com As SqlCommand = New SqlCommand
        Dim consumers3 As List(Of ERC) = New List(Of ERC)()
        Dim consumers1 As List(Of vwConsumer) = New List(Of vwConsumer)()
        Dim consumers As List(Of NewClass) = New List(Of NewClass)()
        Dim reader As SqlDataReader

        ' GET: ERC
        Function Index(ByVal id? As Integer) As ActionResult
            Dim mymodel As ViewModel = New ViewModel()
            mymodel.ERC = consumers3
            mymodel.vwConsumer = consumers1
            mymodel.NewClass = consumers
            FetchData()
            Return View(mymodel)
            If id < 1000 Then
                FetchData2(id)
                Return View(consumers1)
            Else
                FetchData1(id)
                Return View(consumers)
            End If



        End Function



        Private Sub FetchData()


            Try
                con.Open()
                com.Connection = con
                com.CommandText = "select * from ERC"
                reader = com.ExecuteReader()



                While reader.Read()

                    consumers3.Add(New ERC() With {
                        .Name = reader("Name").ToString(),
                        .Code = reader("Code").ToString()
                        })
                End While


            Catch ex As Exception
                con.Close()
                Throw ex
            End Try
        End Sub

        Private Sub FetchData1(ByVal id? As Integer)

            Dim Code As String
            Code = CStr(id)

            If (consumers1.Count > 0) Then
                consumers1.Clear()
            End If
            Try
                con.Open()
                com.Connection = con
                com.CommandText = "select c.NameStreet, c.FullHouse, PC.Value, COUNT(1) CountLS, max(c.idHouse) idHouse
	, isNull(H.ValueTariff, ERC.ValueTariff) ValueTariff
-- select *
from vwConsumer c
inner join ERC (NoLock) on ERC.Code ='" + Code + "'
inner join Accounting A (NoLock) on A.IDAccounting=ERC.IDAccounting
inner join ParameterContract PC on c.IDContract=pc.IDContract and PC.IDTypePC=110 and PC.Value=substring(A.Name,5,100)
left join ERC_House H (NoLock) on c.idhouse=h.idHouse and h.code=ERC.code
group by c.NameStreet, c.FullHouse, PC.Value, H.ValueTariff, ERC.ValueTariff
union
select c.NameStreet, c.FullHouse, PC.Value, COUNT(1) CountLS, max(c.idHouse) idHouse
	, isNull(H.ValueTariff, ERC.ValueTariff) ValueTariff
from vwConsumer c
inner join ERC (NoLock) on ERC.Code ='" + Code + "'
inner join Accounting A (NoLock) on A.IDAccounting=ERC.IDAccounting
inner join ParameterContract PC on c.IDContract=pc.IDContract and PC.IDTypePC=133 and PC.Value=substring(A.Name,5,100)
left join ERC_House H (NoLock) on c.idhouse=h.idHouse and h.code=ERC.code
group by c.NameStreet, c.FullHouse, PC.Value, H.ValueTariff, ERC.ValueTariff
order by 1,2"
                reader = com.ExecuteReader()



                While reader.Read()

                    consumers1.Add(New vwConsumer() With {
                        .Value = reader("Value").ToString(),
                         .CountLS = reader("CountLS").ToString(),
                          .NameStreet = reader("NameStreet").ToString(),
                           .FullHouse = reader("FullHouse").ToString(),
                        .ValueTariff = reader("ValueTariff").ToString()
                                  })
                End While


            Catch ex As Exception
                con.Close()
                Throw ex
            End Try
        End Sub


        Private Sub FetchData2(ByVal id? As Integer)

            Dim Code As String
            Code = CStr(id)

            If (consumers.Count > 0) Then
                consumers.Clear()
            End If
            Try
                con.Open()
                com.Connection = con
                com.CommandText = "select distinct c.NameStreet
	, A.Name
--	, *
from vwConsumer c
inner join erc (NoLock) on ERC.code='" + Code + "'
inner join Accounting A (NoLock) on A.IDAccounting=erc.IDAccounting
inner join TypePC T (NoLock) on T.NameParameter = A.Name
inner join ParameterContract PC (NoLock) on c.IDContract=PC.IDContract and PC.IDTypePC=T.IDTypePC
order by c.NameStreet, A.Name"
                reader = com.ExecuteReader()



                While reader.Read()

                    consumers.Add(New NewClass() With {
                .NameStreet = reader("NameStreet").ToString(),
                .Name = reader("Name").ToString()
                 })
                End While


            Catch ex As Exception
                con.Close()
                Throw ex

            End Try


        End Sub

    End Class
End Namespace

